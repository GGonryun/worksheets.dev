import { verifyPuzzle } from './utility';

export type PuzzleRule = 'no-3-letter-words' | 'no-4-letter-words';

export const printPuzzleRule = (rules: PuzzleRule[]) => {
  if (rules.includes('no-4-letter-words')) {
    return 'No 3 or 4 Letter Words';
  } else if (rules.includes('no-3-letter-words')) {
    return 'No 3 Letter Words';
  }
};

export type Puzzle = {
  letters: string[];
  words: string[];
  bonuses: string[];
  rules: PuzzleRule[];
};

export const puzzles: Puzzle[] = [
  {
    letters: 'work'.split(''),
    words: ['work', 'row'],
    bonuses: ['wok'],
    rules: [],
  },
  {
    letters: 'sheet'.split(''),
    words: ['sheet', 'these', 'see', 'she', 'set', 'the'],
    bonuses: ['hest', 'seth', 'thee', 'tee', 'tees'],
    rules: [],
  },
  {
    letters: 'tent'.split(''),
    words: ['tent', 'net', 'ten'],
    bonuses: ['tet'],
    rules: [],
  },
  {
    letters: 'type'.split(''),
    words: ['type', 'yet', 'pet'],
    bonuses: ['tye', 'pye', 'yep'],
    rules: [],
  },
  {
    letters: 'brick'.split(''),
    words: ['brick', 'crib', 'ick', 'rib'],
    bonuses: ['brik', 'rick', 'irk', 'kir'],
    rules: [],
  },
  {
    letters: 'page'.split(''),
    words: ['page', 'gape', 'age', 'ape', 'gap', 'peg'],
    bonuses: ['peag', 'pea', 'gae'],
    rules: [],
  },
  {
    letters: 'spank'.split(''),
    words: ['spank', 'naps', 'pans', 'pan', 'sank', 'snap', 'span'],
    bonuses: ['knaps', 'san'],
    rules: [],
  },
  {
    letters: 'boat'.split(''),
    words: ['boat', 'bat', 'boa', 'bot', 'tab', 'oat'],
    bonuses: ['tao', 'bota', 'bato'],
    rules: [],
  },
  {
    letters: 'break'.split(''),
    words: ['baker', 'break', 'brake', 'bake', 'bare', 'bark', 'bear', 'rake'],
    bonuses: ['berk', 'kerb', 'bae', 'erk', 'rea', 'reb'],
    rules: [],
  },
  {
    letters: 'cabin'.split(''),
    words: ['cabin', 'inca', 'ban', 'bin', 'can', 'cab', 'nab'],
    bonuses: ['bani', 'cain', 'ain', 'ani', 'bai', 'nib'],
    rules: [],
  },

  {
    letters: 'supply'.split(''),
    words: [
      'supply',
      'pulpy',
      'plus',
      'pulp',
      'pulps',
      'pups',
      'ply',
      'sly',
      'spy',
    ],
    bonuses: ['yups', 'pus', 'ups', 'yup', 'yus', 'sup'],
    rules: [],
  },
  {
    letters: 'cream'.split(''),
    words: [
      'cream',
      'acre',
      'came',
      'care',
      'cram',
      'mace',
      'mare',
      'race',
      'ram',
      'ace',
      'arm',
      'car',
      'ear',
      'are',
    ],
    bonuses: ['acme', 'rec', 'rem', 'mac', 'era', 'cam', 'arc', 'mar'],
    rules: [],
  },
  {
    letters: 'spring'.split(''),
    words: [
      'spring',
      'grips',
      'rings',
      'grip',
      'grin',
      'pigs',
      'pins',
      'rigs',
      'ring',
      'sign',
      'sing',
      'spin',
      'snip',
    ],
    bonuses: [
      'pings',
      'sprig',
      'gins',
      'nips',
      'ping',
      'snig',
      'rins',
      'rips',
      'gips',
    ],
    rules: ['no-3-letter-words'],
  },
  {
    letters: 'bottle'.split(''),
    words: [
      'bottle',
      'belt',
      'bolt',
      'lobe',
      'lot',
      'bot',
      'lob',
      'toe',
      'let',
      'bet',
    ],
    bonuses: [
      'tote',
      'bel',
      'bol',
      'ole',
      'botel',
      'botte',
      'lotte',
      'obe',
      'tet',
    ],
    rules: [],
  },
  {
    letters: 'sight'.split(''),
    words: [
      'sight',
      'gist',
      'sigh',
      'hits',
      'this',
      'his',
      'hit',
      'its',
      'sit',
    ],
    bonuses: ['hist', 'shit', 'sith'],
    rules: [],
  },
  {
    letters: 'camped'.split(''),
    words: [
      'camped',
      'caped',
      'paced',
      'maced',
      'came',
      'camp',
      'cape',
      'damp',
      'mace',
      'made',
      'pace',
    ],
    bonuses: ['acme', 'aced', 'dace', 'mead', 'dame'],
    rules: ['no-3-letter-words'],
  },
  {
    letters: 'bread'.split(''),
    words: [
      'beard',
      'bread',
      'bard',
      'bare',
      'bead',
      'bear',
      'bred',
      'dare',
      'dear',
      'drab',
      'read',
    ],
    bonuses: ['barde', 'bared', 'bade', 'brad'],
    rules: ['no-3-letter-words'],
  },
  {
    letters: 'blown'.split(''),
    words: [
      'blown',
      'blow',
      'bowl',
      'bow',
      'lob',
      'low',
      'now',
      'owl',
      'own',
      'won',
    ],
    bonuses: ['lown', 'bon', 'nob'],
    rules: [],
  },
  {
    letters: 'unite'.split(''),
    words: [
      'unite',
      'untie',
      'tune',
      'unit',
      'net',
      'nut',
      'ten',
      'tie',
      'tin',
    ],
    bonuses: ['nit', 'ute', 'nuit', 'tine'],
    rules: [],
  },
  {
    letters: 'cried'.split(''),
    words: [
      'cried',
      'cider',
      'dicer',
      'riced',
      'dice',
      'dire',
      'iced',
      'rice',
      'ice',
      'ride',
      'die',
      'red',
      'rid',
    ],
    bonuses: ['ire', 'rec', 'rei'],
    rules: [],
  },
  {
    letters: 'toffee'.split(''),
    words: ['toffee', 'feet', 'fee', 'off', 'tee', 'toe'],
    bonuses: ['fet', 'foe', 'oft', 'toff'],
    rules: [],
  },
  {
    letters: 'apple'.split(''),
    words: ['apple', 'leap', 'pale', 'plea', 'ape', 'app', 'lap', 'pea'],
    bonuses: ['ale', 'alp', 'pal', 'pep', 'peal', 'pap'],
    rules: [],
  },
  {
    letters: 'plate'.split(''),
    words: [
      'plate',
      'leapt',
      'petal',
      'late',
      'leap',
      'pale',
      'pelt',
      'plea',
      'tale',
      'tape',
      'teal',
    ],
    bonuses: ['pleat', 'leat', 'lept', 'pate', 'peal', 'peat', 'tael', 'tela'],
    rules: ['no-3-letter-words'],
  },
  {
    letters: 'water'.split(''),
    words: [
      'water',
      'rate',
      'tear',
      'ware',
      'wart',
      'wear',
      'are',
      'awe',
      'ear',
      'eat',
      'raw',
      'tar',
      'rat',
      'tea',
      'war',
      'wet',
    ],
    bonuses: ['era', 'taw', 'tew', 'wat', 'arte', 'tare'],
    rules: [],
  },
  {
    letters: 'clams'.split(''),
    words: ['clams', 'clam', 'cams', 'calm', 'scam', 'slam', 'cam'],
    bonuses: ['calms', 'alms', 'cals', 'salm', 'macs', 'mac', 'lam'],
    rules: [],
  },
  {
    letters: 'indeed'.split(''),
    words: [
      'indeed',
      'denied',
      'dined',
      'ended',
      'died',
      'deed',
      'need',
      'did',
      'den',
      'end',
    ],
    bonuses: ['diene', 'ned', 'nide', 'in', 'deni'],
    rules: [],
  },
  {
    letters: 'react'.split(''),
    words: [
      'react',
      'crate',
      'trace',
      'acre',
      'care',
      'cart',
      'race',
      'rate',
      'tear',
      'ace',
      'act',
      'art',
      'ate',
      'car',
      'cat',
      'ear',
      'eat',
      'rat',
      'tar',
      'tea',
    ],
    bonuses: [
      'tae',
      'ret',
      'eta',
      'rec',
      'are',
      'arc',
      'tare',
      'acer',
      'carte',
      'recta',
      'era',
      'cater',
      'caret',
    ],
    rules: [],
  },
  {
    letters: 'capital'.split(''),
    words: [
      'capital',
      'capita',
      'clap',
      'clip',
      'pact',
      'pail',
      'tail',
      'pita',
      'plat',
    ],
    bonuses: [
      'clipt',
      'cap',
      'lap',
      'tapa',
      'lipa',
      'pat',
      'pal',
      'pac',
      'lit',
    ],
    rules: ['no-3-letter-words'],
  },
  {
    letters: 'warren'.split(''),
    words: [
      'warren',
      'anew',
      'earn',
      'rare',
      'near',
      'rear',
      'wane',
      'ware',
      'wean',
      'wear',
      'wren',
    ],
    bonuses: ['warner', 'reran', 'rewan', 'arre', 'rawer'],
    rules: ['no-3-letter-words'],
  },
  {
    letters: 'teabag'.split(''),
    words: [
      'teabag',
      'abate',
      'bate',
      'beat',
      'beta',
      'gate',
      'age',
      'ate',
      'bag',
      'bat',
      'beg',
      'bet',
      'eat',
      'get',
      'tab',
      'tag',
      'tea',
    ],
    bonuses: [
      'agate',
      'begat',
      'abet',
      'geta',
      'aba',
      'aga',
      'bae',
      'eta',
      'gab',
      'gae',
      'gat',
      'tae',
      'teg',
    ],
    rules: [],
  },
  {
    letters: 'major'.split(''),
    words: ['major', 'roam', 'arm', 'jam', 'jar', 'oar', 'ram'],
    bonuses: ['joram', 'mora', 'mar', 'moa', 'mor', 'raj', 'rom'],
    rules: [],
  },
  {
    letters: 'frolic'.split(''),
    words: [
      'frolic',
      'folic',
      'coil',
      'foil',
      'roil',
      'coif',
      'fir',
      'oil',
      'orc',
      'for',
    ],
    bonuses: [
      'flo',
      'cirl',
      'coli',
      'fico',
      'filo',
      'floc',
      'foci',
      'loci',
      'col',
      'cor',
      'rif',
      'roc',
    ],
    rules: [],
  },
  {
    letters: 'nerds'.split(''),
    words: [
      'nerds',
      'rends',
      'dens',
      'ends',
      'nerd',
      'rend',
      'send',
      'den',
      'end',
      'red',
    ],
    bonuses: ['erns', 'neds', 'reds', 'res', 'sen', 'ser', 'ern', 'ers', 'ren'],
    rules: [],
  },
  {
    letters: 'loosen'.split(''),
    words: [
      'loosen',
      'loose',
      'noose',
      'lens',
      'lone',
      'lose',
      'loon',
      'nose',
      'ones',
      'sole',
      'solo',
      'soon',
    ],
    bonuses: [
      'enols',
      'lenos',
      'noels',
      'nolos',
      'oleos',
      'snool',
      'solon',
      'noel',
      'enol',
      'eons',
      'leno',
      'leso',
      'loos',
      'noes',
      'nolo',
      'oleo',
      'oles',
      'onos',
      'sloe',
      'sone',
      'sool',
    ],
    rules: ['no-3-letter-words'],
  },
  {
    letters: 'cereal'.split(''),
    words: [
      'cereal',
      'relace',
      'clear',
      'acre',
      'care',
      'leer',
      'race',
      'earl',
      'lace',
      'ace',
      'ale',
      'arc',
      'are',
      'real',
      'reel',
      'car',
      'ear',
      'eel',
      'era',
    ],
    bonuses: [
      'carle',
      'creel',
      'lacer',
      'laree',
      'acer',
      'cee',
      'cel',
      'rale',
      'alec',
      'alee',
      'carl',
      'cere',
      'ere',
      'lac',
      'lar',
      'lea',
      'lee',
      'rec',
      'ree',
    ],
    rules: [],
  },
  {
    letters: 'warmth'.split(''),
    words: [
      'warmth',
      'wrath',
      'harm',
      'math',
      'thaw',
      'tram',
      'warm',
      'wart',
      'what',
      'arm',
      'art',
      'ham',
      'hat',
      'mat',
      'ram',
      'rat',
      'raw',
      'tar',
      'war',
    ],
    bonuses: [
      'tharm',
      'thraw',
      'hart',
      'mart',
      'rath',
      'thar',
      'haw',
      'tam',
      'mar',
      'maw',
      'taw',
      'wat',
      'wha',
      'twa',
    ],
    rules: [],
  },
  {
    letters: 'humans'.split(''),
    words: [
      'humans',
      'human',
      'hams',
      'mash',
      'mush',
      'sham',
      'shun',
      'ham',
      'hum',
      'has',
      'hun',
      'man',
      'sum',
    ],
    bonuses: [
      'manus',
      'amus',
      'hums',
      'huns',
      'mans',
      'maun',
      'muns',
      'amu',
      'mas',
      'mus',
      'nah',
      'nam',
      'san',
      'mun',
    ],
    rules: [],
  },
  {
    letters: 'alone'.split(''),
    words: [
      'alone',
      'aloe',
      'lane',
      'lean',
      'loan',
      'lone',
      'ale',
      'eon',
      'ole',
      'one',
    ],
    bonuses: ['noel', 'olea', 'ane', 'lea'],
    rules: [],
  },
];

for (const puzzle of puzzles) {
  verifyPuzzle(puzzle);
}
